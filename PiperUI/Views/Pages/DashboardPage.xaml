<Page x:Name="page"
    x:Class="PiperUI.Views.Pages.DashboardPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:PiperUI.Views.Pages"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    xmlns:Interactivity="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:Interactions="using:Microsoft.Xaml.Interactions.Core"
    Title="DashboardPage"
    d:DataContext="{d:DesignInstance local:DashboardPage,
                                     IsDesignTimeCreatable=False}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    ui:Design.Background="{DynamicResource ApplicationBackgroundBrush}"
    ui:Design.Foreground="{DynamicResource TextFillColorPrimaryBrush}"
    Foreground="{DynamicResource TextFillColorPrimaryBrush}"
    mc:Ignorable="d">

    <Interactivity:Interaction.Triggers>
        <Interactivity:EventTrigger EventName="Loaded" SourceObject="{Binding ElementName=page}">
            <Interactivity:InvokeCommandAction Command="{Binding ViewModel.InitializeCommand}" />
        </Interactivity:EventTrigger>

        <Interactivity:EventTrigger EventName="SelectionChanged" SourceObject="{Binding ElementName=languageComboBox}">
            <Interactivity:InvokeCommandAction Command="{Binding ViewModel.LoadVoicesCommand}" />
        </Interactivity:EventTrigger>

        <Interactivity:EventTrigger EventName="SelectionChanged" SourceObject="{Binding ElementName=voiceNameComboBox}">
            <Interactivity:InvokeCommandAction Command="{Binding ViewModel.LoadQualitiesCommand}" />
        </Interactivity:EventTrigger>

    </Interactivity:Interaction.Triggers>

    <Grid x:Name="grid" Margin="20">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!-- Custom ComboBox -->
        <StackPanel Grid.Row="0" Grid.Column="0" Margin="0,0,10,20">
            <Label Content="Custom" Margin="0,0,0,5"/>
            <ComboBox x:Name="customComboBox" Height="40" ItemsSource="{Binding ViewModel.CustomVoices}" SelectedItem="{Binding ViewModel.SelectedCustomVoice, Mode=TwoWay}" />
        </StackPanel>

        <!-- Clear Button -->
        <ui:Button Grid.Row="0" Grid.Column="1" Content="Clear" Command="{Binding ViewModel.ClearPromptTextCommand}" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="0,0,0,20"/>

        <!-- Language ComboBox -->
        <StackPanel Grid.Row="1" Grid.Column="0" Margin="0,0,10,20">
            <Label Content="Language" Margin="0,0,0,5"/>
            <ComboBox x:Name="languageComboBox" Height="40" ItemsSource="{Binding ViewModel.Languages}" SelectedItem="{Binding ViewModel.SelectedLanguage, Mode=TwoWay}"/>
        </StackPanel>

        <!-- Voice ComboBox -->
        <StackPanel Grid.Row="1" Grid.Column="1" Margin="5,0,5,20">
            <Label Content="Voice" Margin="0,0,0,5"/>
            <ComboBox x:Name="voiceNameComboBox" Height="40" ItemsSource="{Binding ViewModel.Voices}" SelectedItem="{Binding ViewModel.SelectedVoice}" />
        </StackPanel>

        <!-- Quality ComboBox -->
        <StackPanel Grid.Row="1" Grid.Column="2" Margin="10,0,0,20">
            <Label Content="Quality" Margin="0,0,0,5"/>
            <ComboBox x:Name="qualityComboBox" Height="40" ItemsSource="{Binding ViewModel.Qualities}" SelectedItem="{Binding ViewModel.SelectedQuality, Mode=TwoWay}"  />
        </StackPanel>

        <!-- Playback Speed Slider -->
        <StackPanel Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" Margin="0,0,0,20">
            <Label Content="Playback Speed" Margin="0,0,0,5"/>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Slider x:Name="playbackSpeedSlider" 
                        Margin="2,0,2,0"
                        SmallChange="0.1"
                        Minimum="0.1" 
                        Maximum="5.0" 
                        Value="{Binding ViewModel.PlaybackSpeed, Mode=TwoWay}" 
                        TickFrequency="0.1" 
                        IsSnapToTickEnabled="True"
                    />
                <TextBlock x:Name="playbackSpeedLabel" Grid.Column="1" Margin="10,0,0,0" 
                       VerticalAlignment="Center" Text="{Binding ViewModel.PlaybackSpeedDescription}"/>
            </Grid>
        </StackPanel>

        <!-- Prompt Label -->
        <Label Grid.Row="3" Grid.Column="0" Content="Prompt" Margin="0,0,0,5"/>

        <!-- Prompt TextBox -->
        <ui:TextBox Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="3" x:Name="txtPrompt" 
                TextWrapping="Wrap" AcceptsReturn="True"
                ScrollViewer.VerticalScrollBarVisibility="Auto"
                Margin="0,0,0,20"
                    Text="{Binding ViewModel.PromptText, Mode=TwoWay}"/>

        <!-- Generate Button and Label -->
        <StackPanel Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="3" Orientation="Horizontal">
            <ui:Button Content="Generate" Command="{Binding ViewModel.GenerateCommand}"  Margin="0,0,20,0"/>
            <Label x:Name="lblGenerate" VerticalAlignment="Center" Content="{Binding ViewModel.StatusText}"/>
        </StackPanel>
    </Grid>
</Page>
